if game.PlaceId == 12991635726 then
    -- Load Orion Library
    local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

    -- Create Window
    local Window = OrionLib:MakeWindow({
        Name = "Rampage Hub",
        HidePremium = false,
        SaveConfig = true,
        ConfigFolder = "RampageHub"
    })

    -- Services
    local replicatedStorage = game:GetService("ReplicatedStorage")
    local players = game:GetService("Players")
    
    -- Player reference
    local plr = players.LocalPlayer

    -- Add Auto Tab
    local autoTab = Window:MakeTab({
        Name = "Auto",
        Icon = "rbxassetid://4483345998",  -- Use your own asset ID for icon
        PremiumOnly = false
    })

    -- Variable to control Rampage
    local rampageEnabled = false

    -- Rampage Function (Customize with your desired action)
    local function startRampage()
        while rampageEnabled do
            -- Custom Rampage Actions - You can add any functionality here
            -- For example, making the player attack or execute a specific action
            local success, err = pcall(function()
                -- Example: Fire a remote event or perform actions (Replace with your desired remote event)
                -- Example placeholder (customize based on game mechanics)
                replicatedStorage.YourRemoteEvent:FireServer("RampageAction")
            end)
            if not success then
                warn("Error while executing Rampage:", err)
            end
            wait(1)  -- Adjust the delay as needed
        end
    end

    -- Add Rampage Toggle to Auto Tab
    autoTab:AddToggle({
        Name = "Rampage",
        Default = false,
        Callback = function(state)
            rampageEnabled = state
            if rampageEnabled then
                spawn(startRampage)  -- Start the Rampage loop when enabled
            end
        end
    })

    -- Initialize the Orion UI
    OrionLib:Init()
else
    warn("This script is not for this game.")
end
